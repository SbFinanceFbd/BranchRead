/*
 * Loan
 *
 * Branch read docs
 *
 * API version: 0.0.1
 * Contact: shivukumar076@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package controller

import (
	"net/http"

	"github.com/gin-gonic/gin"

	config "github.com/SbFinanceFbd/BranchRead/src/main/go/config"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method string
	// Pattern is the pattern of the URI.
	Pattern string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	v1 := router.Group(config.AppConfig.MustGetString("docs.SwaggerInfo.BasePath"))
	{
		for _, route := range routes {
			switch route.Method {
			case http.MethodGet:
				v1.GET(route.Pattern, route.HandlerFunc)
			case http.MethodPost:
				v1.POST(route.Pattern, route.HandlerFunc)
			case http.MethodPut:
				v1.PUT(route.Pattern, route.HandlerFunc)
			case http.MethodPatch:
				v1.PATCH(route.Pattern, route.HandlerFunc)
			case http.MethodDelete:
				v1.DELETE(route.Pattern, route.HandlerFunc)
			}
		}
	}
	router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	return router
}

var routes = Routes{
	{
		"Ping",
		http.MethodGet,
		config.AppConfig.MustGetString("routes.ping"),
		Ping,
	},
	{
		"GetBranchs",
		http.MethodGet,
		config.AppConfig.MustGetString("routes.getBranchs"),
		GetBranchs,
	},
	{
		"GetBranchByBranchId",
		http.MethodGet,
		config.AppConfig.MustGetString("routes.getBranchByBranchId"),
		GetBranchByBranchId,
	},
	{
		"GetBranchByBranchName",
		http.MethodGet,
		config.AppConfig.MustGetString("routes.getBranchByBranchName"),
		GetBranchByBranchName,
	},
}
